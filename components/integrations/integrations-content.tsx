
'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { 
  Zap, 
  Plus, 
  Settings,
  CheckCircle,
  AlertCircle,
  Clock,
  Bot,
  RefreshCw,
  ExternalLink,
  Shield,
  Calendar,
  Cloud
} from 'lucide-react'

interface Integration {
  id: string
  service: string
  name: string
  description: string
  status: 'ACTIVE' | 'INACTIVE' | 'ERROR' | 'EXPIRED'
  category: 'STORAGE' | 'ANALYTICS' | 'COMMUNICATION' | 'PRODUCTIVITY' | 'FINANCE'
  icon: string
  features: string[]
  lastSync?: string
  isPopular?: boolean
  isPremium?: boolean
}

const availableIntegrations: Integration[] = [
  {
    id: '1',
    service: 'GOOGLE_DRIVE',
    name: 'Google Drive',
    description: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ',
    status: 'ACTIVE',
    category: 'STORAGE',
    icon: '‚òÅÔ∏è',
    features: ['–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏', '–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ'],
    lastSync: '2024-12-25T14:30:00Z',
    isPopular: true
  },
  {
    id: '2',
    service: 'GOOGLE_ANALYTICS',
    name: 'Google Analytics',
    description: '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤',
    status: 'ACTIVE',
    category: 'ANALYTICS',
    icon: 'üìä',
    features: ['–ò–º–ø–æ—Ä—Ç –º–µ—Ç—Ä–∏–∫', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã', '–ü—Ä–æ–≥–Ω–æ–∑–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'],
    lastSync: '2024-12-25T12:15:00Z',
    isPopular: true
  },
  {
    id: '3',
    service: 'SLACK',
    name: 'Slack',
    description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–∞–±–æ—á–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã',
    status: 'INACTIVE',
    category: 'COMMUNICATION',
    icon: 'üí¨',
    features: ['Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', '–ê–≤—Ç–æ–æ—Ç—á–µ—Ç—ã –≤ –∫–∞–Ω–∞–ª—ã', '–ö–æ–º–∞–Ω–¥–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã'],
    isPopular: true
  },
  {
    id: '4',
    service: 'DROPBOX',
    name: 'Dropbox',
    description: '–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤',
    status: 'INACTIVE',
    category: 'STORAGE',
    icon: 'üì¶',
    features: ['–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è', '–í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤']
  },
  {
    id: '5',
    service: 'STRIPE',
    name: 'Stripe',
    description: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏',
    status: 'ERROR',
    category: 'FINANCE',
    icon: 'üí≥',
    features: ['–ò–º–ø–æ—Ä—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–≤–µ—Ä–∫–∞', '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
    isPremium: true
  },
  {
    id: '6',
    service: 'CALENDLY',
    name: 'Calendly',
    description: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –æ–Ω–ª–∞–π–Ω-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á',
    status: 'INACTIVE',
    category: 'PRODUCTIVITY',
    icon: 'üìÖ',
    features: ['–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å—Ç—Ä–µ—á', '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤—Å—Ç—Ä–µ—á']
  },
  {
    id: '7',
    service: 'HUBSPOT',
    name: 'HubSpot',
    description: 'CRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ —Å–¥–µ–ª–∫–∞–º–∏',
    status: 'INACTIVE',
    category: 'PRODUCTIVITY',
    icon: 'üè¢',
    features: ['–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', '–ò–º–ø–æ—Ä—Ç —Å–¥–µ–ª–æ–∫', '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂'],
    isPremium: true
  },
  {
    id: '8',
    service: 'ONEDRIVE',
    name: 'OneDrive',
    description: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ–±–ª–∞—á–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º Microsoft',
    status: 'INACTIVE',
    category: 'STORAGE',
    icon: '‚òÅÔ∏è',
    features: ['–û–±–ª–∞—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è', 'Office 365 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', '–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞']
  }
]

export function IntegrationsContent() {
  const [integrations, setIntegrations] = useState<Integration[]>(availableIntegrations)
  const [filter, setFilter] = useState<'all' | 'active' | 'inactive'>('all')

  const categories = [
    { id: 'all', label: '–í—Å–µ', count: integrations.length },
    { id: 'STORAGE', label: '–•—Ä–∞–Ω–∏–ª–∏—â–µ', count: integrations.filter(i => i.category === 'STORAGE').length },
    { id: 'ANALYTICS', label: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', count: integrations.filter(i => i.category === 'ANALYTICS').length },
    { id: 'COMMUNICATION', label: '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏', count: integrations.filter(i => i.category === 'COMMUNICATION').length },
    { id: 'PRODUCTIVITY', label: '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', count: integrations.filter(i => i.category === 'PRODUCTIVITY').length },
    { id: 'FINANCE', label: '–§–∏–Ω–∞–Ω—Å—ã', count: integrations.filter(i => i.category === 'FINANCE').length }
  ]

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'ACTIVE': return <CheckCircle className="h-4 w-4 text-green-600" />
      case 'ERROR': return <AlertCircle className="h-4 w-4 text-red-600" />
      case 'EXPIRED': return <Clock className="h-4 w-4 text-orange-600" />
      default: return <Clock className="h-4 w-4 text-muted-foreground" />
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'ACTIVE': return 'bg-green-50 text-green-600 dark:bg-green-950 dark:text-green-400'
      case 'ERROR': return 'bg-red-50 text-red-600 dark:bg-red-950 dark:text-red-400'
      case 'EXPIRED': return 'bg-orange-50 text-orange-700 dark:bg-orange-950 dark:text-orange-300'
      default: return 'bg-gray-50 text-gray-600 dark:bg-gray-950 dark:text-gray-400'
    }
  }

  const getStatusText = (status: string) => {
    switch (status) {
      case 'ACTIVE': return '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ'
      case 'ERROR': return '–û—à–∏–±–∫–∞'
      case 'EXPIRED': return '–ò—Å—Ç–µ–∫–ª–æ'
      case 'INACTIVE': return '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ'
      default: return status
    }
  }

  const handleToggleIntegration = (integrationId: string) => {
    setIntegrations(prev => 
      prev.map(integration => 
        integration.id === integrationId 
          ? { 
              ...integration, 
              status: integration.status === 'ACTIVE' ? 'INACTIVE' : 'ACTIVE',
              lastSync: integration.status === 'INACTIVE' ? new Date().toISOString() : integration.lastSync
            }
          : integration
      )
    )
  }

  const formatLastSync = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: 'short',
      hour: '2-digit',
      minute: '2-digit'
    })
  }

  const filteredIntegrations = integrations.filter(integration => {
    if (filter === 'active') return integration.status === 'ACTIVE'
    if (filter === 'inactive') return integration.status !== 'ACTIVE'
    return true
  })

  const activeIntegrations = integrations.filter(i => i.status === 'ACTIVE').length

  return (
    <div className="p-6 space-y-8">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-foreground">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h1>
          <p className="text-muted-foreground mt-2">
            –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
          </p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" size="sm">
            <ExternalLink className="h-4 w-4 mr-2" />
            API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
          </Button>
          <Button>
            <Plus className="h-4 w-4 mr-2" />
            –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
          </Button>
        </div>
      </div>

      {/* AI Insights */}
      <Card className="card-hover bg-gradient-to-r from-secondary/10 to-secondary/5 border-secondary/20">
        <CardContent className="p-6">
          <div className="flex items-start gap-4">
            <div className="p-3 bg-secondary/20 rounded-lg">
              <Bot className="h-6 w-6 text-secondary" />
            </div>
            <div className="flex-1">
              <h3 className="font-semibold text-lg mb-2">IA –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º</h3>
              <p className="text-muted-foreground mb-4">
                –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Google Analytics –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –º–µ—Ç—Ä–∏–∫ –≤–µ–±-—Å–∞–π—Ç–∞. 
                –¢–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å–æ Slack –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö.
              </p>
              <div className="flex gap-2">
                <Button variant="outline" size="sm">
                  –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                </Button>
                <Button variant="ghost" size="sm">
                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
                </Button>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Stats */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card className="card-hover">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 bg-secondary/20 rounded-lg">
                <Zap className="h-5 w-5 text-secondary" />
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã–µ</p>
                <p className="text-2xl font-bold">{activeIntegrations}</p>
                <p className="text-xs text-muted-foreground">–∏–∑ {integrations.length}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="card-hover">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 bg-green-50 rounded-lg dark:bg-green-950">
                <CheckCircle className="h-5 w-5 text-green-600 dark:text-green-400" />
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">–†–∞–±–æ—Ç–∞—é—Ç</p>
                <p className="text-2xl font-bold">{integrations.filter(i => i.status === 'ACTIVE').length}</p>
                <p className="text-xs text-muted-foreground">–±–µ–∑ –æ—à–∏–±–æ–∫</p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="card-hover">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 bg-blue-50 rounded-lg dark:bg-blue-950">
                <Cloud className="h-5 w-5 text-blue-600 dark:text-blue-400" />
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</p>
                <p className="text-2xl font-bold">2.3GB</p>
                <p className="text-xs text-muted-foreground">–∑–∞ —Å–µ–≥–æ–¥–Ω—è</p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="card-hover">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 bg-purple-50 rounded-lg dark:bg-purple-950">
                <Shield className="h-5 w-5 text-purple-600 dark:text-purple-400" />
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</p>
                <p className="text-2xl font-bold">100%</p>
                <p className="text-xs text-muted-foreground">SSL –∑–∞—â–∏—Ç–∞</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Filters */}
      <div className="flex items-center gap-4">
        <div className="flex gap-1 p-1 bg-muted rounded-lg">
          {[
            { id: 'all', label: '–í—Å–µ' },
            { id: 'active', label: '–ê–∫—Ç–∏–≤–Ω—ã–µ' },
            { id: 'inactive', label: '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ' }
          ].map((filterOption) => (
            <Button
              key={filterOption.id}
              variant={filter === filterOption.id ? "default" : "ghost"}
              size="sm"
              onClick={() => setFilter(filterOption.id as any)}
              className="text-xs"
            >
              {filterOption.label}
            </Button>
          ))}
        </div>

        <div className="flex flex-wrap gap-2">
          {categories.map((category) => (
            <Badge key={category.id} variant="outline" className="text-xs">
              {category.label} ({category.count})
            </Badge>
          ))}
        </div>
      </div>

      {/* Integrations Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredIntegrations.map((integration) => (
          <Card key={integration.id} className="card-hover group">
            <CardHeader className="pb-3">
              <div className="flex items-start justify-between">
                <div className="flex items-center gap-3">
                  <div className="text-2xl">{integration.icon}</div>
                  <div>
                    <div className="flex items-center gap-2">
                      <CardTitle className="text-base">{integration.name}</CardTitle>
                      {integration.isPopular && (
                        <Badge variant="secondary" className="text-xs">–ü–æ–ø—É–ª—è—Ä–Ω–æ</Badge>
                      )}
                      {integration.isPremium && (
                        <Badge variant="outline" className="text-xs">Premium</Badge>
                      )}
                    </div>
                    <div className="flex items-center gap-2 mt-1">
                      {getStatusIcon(integration.status)}
                      <Badge className={getStatusColor(integration.status)}>
                        {getStatusText(integration.status)}
                      </Badge>
                    </div>
                  </div>
                </div>
                <Button variant="ghost" size="icon" className="opacity-0 group-hover:opacity-100 transition-opacity">
                  <Settings className="h-4 w-4" />
                </Button>
              </div>
            </CardHeader>
            
            <CardContent className="space-y-4">
              <CardDescription className="text-sm">
                {integration.description}
              </CardDescription>

              {/* Features */}
              <div>
                <p className="text-xs font-medium text-muted-foreground mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</p>
                <ul className="space-y-1">
                  {integration.features.slice(0, 3).map((feature, index) => (
                    <li key={index} className="text-xs text-muted-foreground flex items-center gap-2">
                      <CheckCircle className="h-3 w-3 text-green-600" />
                      {feature}
                    </li>
                  ))}
                </ul>
              </div>

              {/* Last Sync */}
              {integration.lastSync && (
                <div className="flex items-center gap-2 text-xs text-muted-foreground">
                  <RefreshCw className="h-3 w-3" />
                  –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {formatLastSync(integration.lastSync)}
                </div>
              )}

              {/* Action Button */}
              <Button 
                className="w-full"
                variant={integration.status === 'ACTIVE' ? 'outline' : 'default'}
                onClick={() => handleToggleIntegration(integration.id)}
              >
                {integration.status === 'ACTIVE' ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–ü–æ–¥–∫–ª—é—á–∏—Ç—å'}
              </Button>
            </CardContent>
          </Card>
        ))}
      </div>

      {filteredIntegrations.length === 0 && (
        <div className="text-center py-12">
          <Zap className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
          <h3 className="text-lg font-medium text-muted-foreground mb-2">
            –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
          </h3>
          <p className="text-sm text-muted-foreground mb-4">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
          </p>
          <Button>
            –û–±–∑–æ—Ä –≤—Å–µ—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
          </Button>
        </div>
      )}
    </div>
  )
}
